{"ast":null,"code":"var _jsxFileName = \"/Users/tyler/Desktop/fullstack-assessment/stock-portfolio/client/src/context/stock/StockState.js\";\nimport React, { useReducer } from 'react';\nimport StockReducer from './stockReducer';\nimport StockContext from './stockContext';\nimport { ADD_STOCK, UPDATE_STOCK, SET_CURRENT } from '../types';\n\nconst StockState = props => {\n  const initialState = {\n    currentCash: 5000,\n    currentStocks: [{\n      symbol: 'AAPL',\n      shareAmount: 7,\n      // sharePrice is the current price, has to be red or green if it is over/under open price\n      sharePrice: 2000\n    }, {\n      symbol: 'AMZN',\n      shareAmount: 7,\n      sharePrice: 5000\n    }, {\n      symbol: 'MSFT',\n      shareAmount: 7,\n      sharePrice: 300\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(StockReducer, initialState); // Add Stock\n\n  const addStock = stock => {\n    dispatch({\n      type: ADD_STOCK,\n      payload: stock\n    });\n  };\n\n  const setCurrent = symbol => {\n    console.log(symbol);\n    dispatch({\n      type: SET_CURRENT,\n      payload: symbol\n    });\n  };\n\n  const updateStock = modifiedStock => {\n    /* for (var i = 0; i < state.currentStocks.length; i++) {\n      if (modifiedStock.symbol === state.currentStocks[i].symbol) {\n        state.currentStocks[i].shareAmount += Number(modifiedStock.shareAmount);\n        break;\n      }\n    } */\n    // Force the rerender of the newly computed # of shares\n    dispatch({\n      type: UPDATE_STOCK\n    });\n  }; // Helpers\n  // Check if Stock exists\n\n\n  const stockExists = symbol => {\n    var checkStock = state.currentStocks.some(stock => {\n      return symbol == stock.symbol;\n    });\n    return checkStock;\n  };\n\n  return React.createElement(StockContext.Provider, {\n    value: {\n      currentCash: state.currentCash,\n      currentStocks: state.currentStocks,\n      current,\n      addStock,\n      stockExists,\n      updateStock,\n      setCurrent\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default StockState;","map":{"version":3,"sources":["/Users/tyler/Desktop/fullstack-assessment/stock-portfolio/client/src/context/stock/StockState.js"],"names":["React","useReducer","StockReducer","StockContext","ADD_STOCK","UPDATE_STOCK","SET_CURRENT","StockState","props","initialState","currentCash","currentStocks","symbol","shareAmount","sharePrice","current","state","dispatch","addStock","stock","type","payload","setCurrent","console","log","updateStock","modifiedStock","stockExists","checkStock","some","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,WAAjC,QAAmD,UAAnD;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,WAAW,EAAE,IADM;AAEnBC,IAAAA,aAAa,EAAE,CACb;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,WAAW,EAAE,CAFf;AAGE;AACAC,MAAAA,UAAU,EAAE;AAJd,KADa,EAOb;AACEF,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,WAAW,EAAE,CAFf;AAGEC,MAAAA,UAAU,EAAE;AAHd,KAPa,EAYb;AACEF,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,WAAW,EAAE,CAFf;AAGEC,MAAAA,UAAU,EAAE;AAHd,KAZa,CAFI;AAoBnBC,IAAAA,OAAO,EAAE;AApBU,GAArB;AAuBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACC,YAAD,EAAeO,YAAf,CAApC,CAxB0B,CA0B1B;;AACA,QAAMS,QAAQ,GAAGC,KAAK,IAAI;AACxBF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEhB,SADC;AAEPiB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,UAAU,GAAGV,MAAM,IAAI;AAC3BW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAK,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd,WADC;AAEPe,MAAAA,OAAO,EAAET;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMa,WAAW,GAAGC,aAAa,IAAI;AACnC;;;;;;AAOA;AACAT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAGD,GAZD,CA1C0B,CAwD1B;AACA;;;AACA,QAAMsB,WAAW,GAAGf,MAAM,IAAI;AAC5B,QAAIgB,UAAU,GAAGZ,KAAK,CAACL,aAAN,CAAoBkB,IAApB,CAAyBV,KAAK,IAAI;AACjD,aAAOP,MAAM,IAAIO,KAAK,CAACP,MAAvB;AACD,KAFgB,CAAjB;AAGA,WAAOgB,UAAP;AACD,GALD;;AAOA,SACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLlB,MAAAA,WAAW,EAAEM,KAAK,CAACN,WADd;AAELC,MAAAA,aAAa,EAAEK,KAAK,CAACL,aAFhB;AAGLI,MAAAA,OAHK;AAILG,MAAAA,QAJK;AAKLS,MAAAA,WALK;AAMLF,MAAAA,WANK;AAOLH,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGd,KAAK,CAACsB,QAXT,CADF;AAeD,CAhFD;;AAkFA,eAAevB,UAAf","sourcesContent":["import React, {useReducer} from 'react';\nimport StockReducer from './stockReducer';\nimport StockContext from './stockContext';\nimport {ADD_STOCK, UPDATE_STOCK, SET_CURRENT} from '../types';\n\nconst StockState = props => {\n  const initialState = {\n    currentCash: 5000,\n    currentStocks: [\n      {\n        symbol: 'AAPL',\n        shareAmount: 7,\n        // sharePrice is the current price, has to be red or green if it is over/under open price\n        sharePrice: 2000\n      },\n      {\n        symbol: 'AMZN',\n        shareAmount: 7,\n        sharePrice: 5000\n      },\n      {\n        symbol: 'MSFT',\n        shareAmount: 7,\n        sharePrice: 300\n      }\n    ],\n    current: null\n  };\n\n  const [state, dispatch] = useReducer(StockReducer, initialState);\n\n  // Add Stock\n  const addStock = stock => {\n    dispatch({\n      type: ADD_STOCK,\n      payload: stock\n    });\n  };\n\n  const setCurrent = symbol => {\n    console.log(symbol);\n    dispatch({\n      type: SET_CURRENT,\n      payload: symbol\n    });\n  };\n\n  const updateStock = modifiedStock => {\n    /* for (var i = 0; i < state.currentStocks.length; i++) {\n      if (modifiedStock.symbol === state.currentStocks[i].symbol) {\n        state.currentStocks[i].shareAmount += Number(modifiedStock.shareAmount);\n        break;\n      }\n    } */\n\n    // Force the rerender of the newly computed # of shares\n    dispatch({\n      type: UPDATE_STOCK\n    });\n  };\n\n  // Helpers\n  // Check if Stock exists\n  const stockExists = symbol => {\n    var checkStock = state.currentStocks.some(stock => {\n      return symbol == stock.symbol;\n    });\n    return checkStock;\n  };\n\n  return (\n    <StockContext.Provider\n      value={{\n        currentCash: state.currentCash,\n        currentStocks: state.currentStocks,\n        current,\n        addStock,\n        stockExists,\n        updateStock,\n        setCurrent\n      }}\n    >\n      {props.children}\n    </StockContext.Provider>\n  );\n};\n\nexport default StockState;\n"]},"metadata":{},"sourceType":"module"}