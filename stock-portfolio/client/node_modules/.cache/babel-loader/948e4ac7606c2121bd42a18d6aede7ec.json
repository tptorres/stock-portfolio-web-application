{"ast":null,"code":"import { ADD_STOCK, UPDATE_STOCK, SET_CURRENT } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_CURRENT:\n      return { ...state,\n        currentStock: state.currentStocks.filter(stock => stock.symbol === action.payload)[0]\n      };\n\n    case UPDATE_STOCK:\n      return { ...state,\n        currentStocks: state.currentStocks.map(stock => stock.symbol === action.payload.symbol ? action.payload : stock)\n      };\n\n    case ADD_STOCK:\n      return { ...state,\n        currentStocks: [...state.currentStocks, action.payload] // making a copy and adding the payload\n\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/tyler/Desktop/fullstack-assessment/stock-portfolio/client/src/context/stock/stockReducer.js"],"names":["ADD_STOCK","UPDATE_STOCK","SET_CURRENT","state","action","type","currentStock","currentStocks","filter","stock","symbol","payload","map"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC,QAAqD,UAArD;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKH,WAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,YAAY,EAAEH,KAAK,CAACI,aAAN,CAAoBC,MAApB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiBN,MAAM,CAACO,OAA5D,EAAqE,CAArE;AAFT,OAAP;;AAIF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELI,QAAAA,aAAa,EAAEJ,KAAK,CAACI,aAAN,CAAoBK,GAApB,CAAwBH,KAAK,IAAKA,KAAK,CAACC,MAAN,KAAiBN,MAAM,CAACO,OAAP,CAAeD,MAAhC,GAAyCN,MAAM,CAACO,OAAhD,GAA0DF,KAA5F;AAFV,OAAP;;AAIF,SAAKT,SAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELI,QAAAA,aAAa,EAAE,CAAC,GAAGJ,KAAK,CAACI,aAAV,EAAyBH,MAAM,CAACO,OAAhC,CAFV,CAEmD;;AAFnD,OAAP;;AAIF;AACE,aAAOR,KAAP;AAjBJ;AAmBD,CApBD","sourcesContent":["import { ADD_STOCK, UPDATE_STOCK, SET_CURRENT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_CURRENT:\n      return {\n        ...state,\n        currentStock: state.currentStocks.filter(stock => stock.symbol === action.payload)[0]\n      };\n    case UPDATE_STOCK:\n      return {\n        ...state,\n        currentStocks: state.currentStocks.map(stock => (stock.symbol === action.payload.symbol ? action.payload : stock))\n      };\n    case ADD_STOCK:\n      return {\n        ...state,\n        currentStocks: [...state.currentStocks, action.payload] // making a copy and adding the payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}